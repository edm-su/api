[tool.poetry]
name = "edm_su_api"
version = "2.6.0"
description = "edm.su backend"
authors = ["Egor <eagluhih@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
alembic = "^1.11"
fastapi = { version = "0.101.1", extras = ["all"] }
Pillow = "^10.0.0"
SQLAlchemy = { extras = ["asyncio"], version = "^2.0" }
PyJWT = "^2.7.0"
python-slugify = { extras = ["unidecode"], version = "^8.0" }
aiohttp = "^3.8.1"
aioboto3 = "^11.2.0"
meilisearch-python-async = "1.6.2"
typing-extensions = "^4.7.1"
greenlet = "^2.0.2"
asyncpg = "^0.27.0"
argon2-cffi = "^21.3.0"
nats-py = "^2.3.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0"
Faker = "^19.3.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.11.1"
pytest-dotenv = "^0.5.2"
pytest-httpx = "^0.23.1"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
types-python-slugify = "^8.0.0"
mypy = "^1.4.1"
ruff = "^0.0.284"
black = "^23.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["alembic/*"]
plugins = ["pydantic.mypy"]

[tool.ruff]
select = [
  "E",      # pycodestyle Error
  "F",      # Pyflakes
  "W",      # pycodestyle Warnings
  "C90",    # mccabe
  "I",      # isort
  "N",      #pep8-naming
  "UP",     # pyupgrade
  "YTT",    # flake8-2020
  "ANN",    # flake8-annotations
  "S",      # flake8-bandit
  "BLE",    # flake8-blind-except
  "FBT",    # flake8-boolean-trap
  "B",      # flake8-bugbear
  "A",      # flake8-builtins
  "COM",    # flake8-commas
  "C4",     # flake8-comprehensions
  "DTZ001", # flake8-datetimez
  "T10",    # flake8-debugger
  "EM",     # flake8-errmsg
  "ISC",    # flake8-implicit-str-concat
  "ICN",    # flake8-import-conventions
  "G",      # flake8-logging-format
  "INP",    # flake8-no-pep420
  "PIE",    # flake8-pie
  "T20",    # flake8-print,
  "PT",     # flake8-pytest-style
  "Q",      # flake8-quotes
  "RSE",    # flake8-raise
  "RET",    # flake8-return
  "SLF",    # flake8-self
  "SIM",    # flake8-simplify
  "TID",    # flake8-tidy-imports
  "TCH",    # flake8-type-checking
  "ARG",    # flake8-unused-arguments
  "PTH",    # flake8-use-pathlib
  "ERA",    # eradicate
  "PGH",    # pygrep-hooks
  "PL",     # Pylint
  "PLE",    # Error
  "PLR",    # Refactor
  "PLW",    # Warninig
  "TRY",    # tryceratops
  "RUF",    # Ruff-specific rules
  "ASYNC",  # flake8-async
  "FA",     # flake8-future-annotations
]
ignore = ["A003", "RUF001", "RUF002", "RUF003", "TRY301"]

line-length = 79

target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "INP001", "ARG", "PLR0913", "S106", "S105"]
"alembic/*" = ["ANN", "INP001"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
  "fastapi.Depends",
  "fastapi.Query",
  "fastapi.Header",
  "fastapi.Body",
  "fastapi.Path",
  "fastapi.File",
  "datetime.date.today",
]

[tool.black]
line-length = 79
target-version = ["py310"]
