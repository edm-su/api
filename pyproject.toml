[project]
name = "edm_su_api"
version = "3.4.0"
description = "edm.su backend"
authors = [{ name = "Egor Glukhikh", email = "egor@henek.ru" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "alembic >=1.13,<2",
  "fastapi[standard-no-fastapi-cloud-cli] ==0.116.0",
  "Pillow >=11.3.0,<11.4.0",
  "SQLAlchemy[asyncio] >=2.0,<3.0",
  "python-slugify[unidecode] >=8.0,<9.0",
  "aiohttp >=3.10.6,<4.0.0",
  "aioboto3 >=14.3.0,<14.4.0",
  "meilisearch-python-async ==1.8.1",
  "typing-extensions >=4.12.2,<5.0.0",
  "greenlet >=3.1.0,<4.0.0",
  "asyncpg >=0.30.0,<0.31.0",
  "authzed >=1.1.0,<2.0.0",
  "aiofiles >=24.1.0,<24.2.0",
  "pydantic-settings>=2.4.0",
  "types-aioboto3[s3]>=13.1.1",
]

[project.urls]
Homepage = "https://edm.su"

[build-system]
requires = ["uv_build>=0.7.19,<0.8.0"]
build-backend = "uv_build"

[tool.uv]
dev-dependencies = [
  "pytest >=8.2.2,<9.0.0",
  "Faker >=37.4.0,<37.5.0",
  "pytest-cov >=6.2.1,<6.3.0",
  "pytest-mock >=3.14.0,<4.0.0",
  "pytest-dotenv >=0.5.2,<0.6.0",
  "pytest-httpx >=0.30.0,<1.0.0",
  "types-python-slugify >=8.0.0,<9.0.0",
  "mypy >=1.11.0,<2.0.0",
  "ruff >=0.12.0,<0.13.0",
  "types-aiofiles >=24.1.0.20240626,<24.2.0",
  "pre-commit >=4.2.0,<4.3.0",
  "anyio>=4.4.0",
]

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["alembic/*"]
plugins = ["pydantic.mypy"]

[tool.ruff]
fix = true

[tool.ruff.lint]
select = [
  "E",     # pycodestyle Error
  "R",     # pyrcodestyle Refactor
  "F",     # Pyflakes
  "W",     # pycodestyle Warnings
  "C90",   # mccabe
  "I",     # isort
  "N",     # pep8-naming
  "UP",    # pyupgrade
  "YTT",   # flake8-2020
  "ANN",   # flake8-annotations
  "S",     # flake8-bandit
  "BLE",   # flake8-blind-except
  "FBT",   # flake8-boolean-trap
  "B",     # flake8-bugbear
  "A",     # flake8-builtins
  "COM",   # flake8-commas
  "C4",    # flake8-comprehensions
  "DTZ",   # flake8-datetimez
  "T10",   # flake8-debugger
  "EM",    # flake8-errmsg
  "ISC",   # flake8-implicit-str-concat
  "ICN",   # flake8-import-conventions
  "LOG",   # flake8-logging
  "G",     # flake8-logging-format
  "INP",   # flake8-no-pep420
  "PIE",   # flake8-pie
  "T20",   # flake8-print
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RSE",   # flake8-raise
  "RET",   # flake8-return
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "SIM",   # flake8-simplify
  "TID",   # flake8-tidy-imports
  "TC",    # flake8-type-checking
  "ARG",   # flake8-unused-arguments
  "PTH",   # flake8-use-pathlib
  "TD",    # flake8-todos
  "FIX",   # flake8-fixme
  "ERA",   # eradicate
  "PGH",   # pygrep-hooks
  "PL",    # Pylint
  "TRY",   # tryceratops
  "FLY",   # flynt
  "PERF",  # perflint
  "RUF",   # Ruff-specific rules
  "ASYNC", # flake8-async
  "FA",    # flake8-future-annotations
  "FURB",  # refurb
  "FAST",  # FastAPI
]
ignore = ["COM812", "ISC001"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "INP001", "ARG", "PLR0913", "S106", "S105"]
"alembic/*" = ["ANN", "INP"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.basedpyright]
executionEnvironments = [{ root = "src" }]
pythonVersion = "3.10"
typeCheckingMode = "standard"
